#include <CAN.h>

#define TX_GPIO_NUM 5  // Connects to CTX
#define RX_GPIO_NUM 4  // Connects to CRX
#define CAN_BITRATE 250E3  // Set the CAN bitrate to 125 kbit/s

void setup() {
  Serial.begin(250000);
  while (!Serial);
  delay(1000);
  Serial.println("CAN Receiver/Receiver");

  // Set the pins
  CAN.setPins(RX_GPIO_NUM, TX_GPIO_NUM);

  // Start the CAN bus at the specified bitrate
  if (!CAN.begin(CAN_BITRATE)) {
    Serial.println("Starting CAN failed!");
    while (1);
  }
  else {
    Serial.println("CAN Initialized");
  }

  // Clear the CAN receive buffer
  while (CAN.available()) {
    CAN.read();
  }
}

void loop() {
  canReceiver();
}

void canReceiver() {
  // Try to parse packet
  int packetSize = CAN.parsePacket();
  if (packetSize) {
    // Received a packet
    unsigned long packetId = CAN.packetId();

    // Print packet ID
    Serial.print("0x");
    Serial.print(packetId, HEX);
    Serial.print(" ");

    // Check if the packet is an extended CAN message
    if (CAN.packetExtended()) {
      //Serial.print("Extended ");
    }

    // Print packet data
    for (int i = 0; i < packetSize; i++) {
      byte dataByte = CAN.read();
      if (dataByte < 0x10) {
        Serial.print("0");
      }
      Serial.print(dataByte, HEX);
      Serial.print(" ");
    }
    Serial.println();
  }
}